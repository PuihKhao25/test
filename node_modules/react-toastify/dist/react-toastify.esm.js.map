{"version":3,"file":"react-toastify.esm.js","sources":["../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/utils/mapper.ts","../src/core/eventManager.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Icons.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastContainer.tsx","../src/core/toast.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks/useToast';\nimport { Icons } from './Icons';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"],"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","e","target","current","dispatchEvent","Event","removeEventListener","type","className","onExited","useLayoutEffect","addEventListener","onEnter","useEffect","onExit","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","useToastContainer","forceUpdate","useReducer","x","toastIds","setToastIds","useState","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","length","removeToast","state","dequeueToast","toastContent","toastProps","staleId","shift","appendToast","buildToast","delay","options","enableMultiContainer","updateId","isNotValid","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","toastAutoClose","containerAutoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","onOpen","onClose","cloneElement","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","hasFocus","window","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","defaultProps","Svg","_ref","rest","width","fill","Icons","info","warning","success","error","spinner","Toast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","ref","renderCloseButton","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"mappings":"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"}